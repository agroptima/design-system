@use '../settings/color_alias';
@use '../settings/typography/content' as typography;
@use '../settings/config';
@use '../settings/depth';
@use '../settings/breakpoints';

.modal-container {
  position: fixed;
  inset: 0;
  z-index: depth.$z-modal;
  margin: config.$space-4x;
  margin-top: 3rem;

  .backdrop {
    position: fixed;
    height: 100%;
    opacity: 0.4;
    background: color_alias.$neutral-color-900;
    inset: 0;
  }

  .modal {
    margin: auto;
    display: flex;
    position: relative;
    padding: config.$space-5x;
    flex-direction: column;
    align-items: flex-start;
    gap: config.$space-2x;
    flex-grow: 1;
    border-radius: config.$corner-radius-xxs;
    background: color_alias.$neutral-white;
    max-width: 34.5rem;
    box-shadow:
      0px 3px 6px -4px rgba(0, 0, 0, 0.12),
      0px 6px 16px 0px rgba(0, 0, 0, 0.08),
      0px 9px 28px 8px rgba(0, 0, 0, 0.05);

    .header {
      display: flex;
      gap: config.$space-2x;
      align-items: flex-start;

      .icon {
        margin-top: 4px;
        min-width: config.$icon-size-5x;
        width: config.$icon-size-5x;
        height: config.$icon-size-5x;
        > svg {
          width: 100%;
          height: 100%;
        }
      }

      .title {
        @include typography.h4;
      }
    }

    .divider {
      width: 100%;
      height: 1px;
      background: color_alias.$neutral-color-200;
      margin-bottom: config.$space-2x;
    }

    .body {
      @include typography.body-regular-primary;
      width: 100%;
    }

    .footer {
      display: flex;
      align-self: flex-end;
      gap: config.$space-3x;
      margin-top: config.$space-2x;
    }

    &.details {
      max-width: 50rem;
      height: 100%;
      overflow-y: auto;
      overflow-anchor: none;
    }

    &.info {
      .header {
        .icon {
          > svg {
            fill: color_alias.$info-color-1000;
            path {
              fill: color_alias.$info-color-1000;
            }
          }
        }
      }
    }

    &.success {
      .header {
        .icon {
          > svg {
            fill: color_alias.$success-color-1000;
            path {
              fill: color_alias.$success-color-1000;
            }
          }
        }
      }
    }

    &.warning {
      .header {
        .icon {
          > svg {
            fill: color_alias.$warning-color-1000;
            path {
              fill: color_alias.$warning-color-1000;
            }
          }
        }
      }
    }

    &.discard {
      .header {
        .icon {
          > svg {
            fill: color_alias.$warning-color-1000;
            path {
              fill: color_alias.$warning-color-1000;
            }
          }
        }
      }
    }

    &.error {
      .header {
        .icon {
          > svg {
            fill: color_alias.$error-color-1000;
            path {
              fill: color_alias.$error-color-1000;
            }
          }
        }
      }
    }

    // Media queries
    // Mobile & tablet cases
    @media only screen and (max-width: breakpoints.$large) {
      &.details {
      }
    }
  }
}
