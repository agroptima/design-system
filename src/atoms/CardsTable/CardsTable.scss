@use '../../settings/mixins';
@use '../../settings/color_alias';
@use '../../settings/typography/cards_table' as typography;
@use '../../settings/config';
@use '../../settings/breakpoints';

.cards-table-list {
  border-collapse: separate;
  border-spacing: 0 config.$space-2x;
  width: 100%;

  th,
  td {
    padding: config.$space-2x config.$space-3x;
    padding: config.$space-2x config.$space-3x;
  }

  tbody {
    tr {
      box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.25);
      cursor: default;
    }
  }

  .cell {
    display: flex;
    align-items: center;
    gap: config.$space-2x;
  }

  .actions > .cell {
    gap: config.$space-7x;
    justify-content: center;
  }

  .no-wrap {
    white-space: nowrap;
  }

  .alignment-left {
    justify-content: flex-start;
  }

  .alignment-right {
    justify-content: flex-end !important;
  }

  .alignment-center {
    justify-content: center;
  }

  &.primary {
    thead > tr {
      @include typography.cards-table-list-header;
    }

    th {
      background: color_alias.$neutral-color-900;
      @include mixins.icon-color(color_alias.$neutral-white);
    }

    th:first-child {
      border-radius: config.$corner-radius-xxs 0px 0px config.$corner-radius-xxs;
    }

    th:last-child {
      border-radius: 0px config.$corner-radius-xxs config.$corner-radius-xxs 0px;
    }

    tr {
      border: 1px solid transparent;
      td {
        @include typography.cards-table-list-text;
      }
    }

    tr:not(.disabled):hover {
      background: color_alias.$primary-color-50;
    }

    &.with-title tr > td:first-child {
      @include typography.cards-table-list-highlight-text;
    }

    tr.disabled {
      background: color_alias.$neutral-color-50;
      td {
        @include typography.cards-table-list-disabled-text;
      }
    }

    tr > td {
      border-top: 1px solid transparent;
      border-bottom: 1px solid transparent;
      &:first-child {
        border-left: 1px solid transparent;
      }
      &:last-child {
        border-right: 1px solid transparent;
      }
    }

    tr.active {
      box-shadow: none;
      > td {
        border-color: color_alias.$primary-color-1000;
      }
    }
  }

  @media only screen and (max-width: breakpoints.$large) {
    thead {
      display: none;
    }

    tr {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      position: relative;
      margin-block: config.$space-3x;
      padding: config.$space-2x config.$space-3x;
      gap: config.$space-1x;
    }

    td {
      width: 100%;
      flex: inherit;
      padding: 0px;
    }

    .actions {
      width: auto;
      position: absolute;
      inset: config.$space-3x config.$space-3x auto auto;
    }

    .floating-left-mobile {
      width: auto;
      order: 98;
    }

    .floating-right-mobile {
      margin-left: auto;
      width: auto;
      order: 99;
    }

    tr.active {
      box-shadow: none;
      border: 1px solid color_alias.$primary-color-1000;
      > td {
        border-color: transparent !important;
      }
    }

    &.with-title td:not(.actions):nth-child(2) {
      margin-top: config.$space-2x;
    }

    .title-actions-5 {
      width: calc(100% - 5 * config.$icon-size-5x - 4 * config.$space-7x - 8px);
    }
    .title-actions-4 {
      width: calc(100% - 4 * config.$icon-size-5x - 3 * config.$space-7x - 8px);
    }
    .title-actions-3 {
      width: calc(100% - 3 * config.$icon-size-5x - 2 * config.$space-7x - 8px);
    }
    .title-actions-2 {
      width: calc(100% - 2 * config.$icon-size-5x - 1 * config.$space-7x - 8px);
    }
    .title-actions-1 {
      width: calc(100% - 1 * config.$icon-size-5x - 8px);
    }
  }
}
