@use '../../settings/color_alias';
@use '../../settings/typography/cards_table' as typography;
@use '../../settings/config';
@use '../../settings/breakpoints';

.cards-table-list {
  display: flex;
  flex-direction: column;
  gap: config.$space-3x;

  tbody {
    display: flex;
    flex-direction: column;
    gap: config.$space-3x;

    tr {
      box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.25);
    }
  }

  tr {
    display: flex;
    flex-grow: 1;
  }

  .container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  th {
    padding: config.$space-2x config.$space-3x;
    text-align: left;

    &.sortable {
      cursor: pointer;
    }

    .icon {
      width: config.$icon-size-3x;
      height: config.$icon-size-3x;
      margin-left: config.$space-1x;
      > svg {
        width: 100%;
        height: 100%;
      }
    }
  }

  .no-wrap {
    white-space: nowrap;
  }

  .alignment-left {
    justify-content: flex-start;
  }

  .alignment-center {
    justify-content: center;
  }

  .actions {
    display: flex;
    gap: config.$space-7x;
  }

  &.primary {
    thead > tr {
      @include typography.cards-table-list-header;
    }

    th {
      background: color_alias.$primary-color-1000;

      .icon {
        > svg {
          fill: color_alias.$neutral-white;
          path {
            fill: color_alias.$neutral-white;
          }
        }

        &.ascending {
          > svg {
            .sorter_svg__up {
              fill: color_alias.$primary-color-600;
            }
            .sorter_svg__down {
              fill: color_alias.$neutral-white;
            }
          }
        }

        &.descending {
          > svg {
            .sorter_svg__up {
              fill: color_alias.$neutral-white;
            }
            .sorter_svg__down {
              fill: color_alias.$primary-color-600;
            }
          }
        }
      }
    }

    th:first-child {
      border-radius: config.$corner-radius-xxs 0px 0px config.$corner-radius-xxs;
    }

    th:last-child {
      border-radius: 0px config.$corner-radius-xxs config.$corner-radius-xxs 0px;
    }

    tr {
      td {
        @include typography.cards-table-list-text;
        overflow: hidden;
      }
    }

    tr:not(.disabled):hover {
      background: color_alias.$primary-color-50;
    }

    tr > td:first-child {
      @include typography.cards-table-list-highlight-text;
    }

    tr.disabled {
      background: color_alias.$neutral-color-50;

      td {
        @include typography.cards-table-list-disabled-text;
      }
    }
  }

  // Desktop
  thead {
    display: flex;
  }
  tr {
    flex-direction: row;
  }

  th,
  td {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex: 2;
  }

  td {
    padding: config.$space-2x config.$space-3x;
  }

  th.actions {
    justify-content: center;
    flex: 1;
  }

  td.actions {
    order: 0;
    justify-content: center;
    flex: 1;
  }

  td:has(.badge) {
    gap: config.$space-2x;
  }

  .alignment-right {
    justify-content: flex-end;
  }

  // Media queries
  // Mobile & tablet cases
  @media only screen and (max-width: breakpoints.$large) {
    thead {
      display: none;
    }

    tbody {
      tr {
        flex-direction: row;
        flex-wrap: wrap;
        position: relative;
        gap: config.$space-1x;
        padding: config.$space-2x config.$space-3x;
      }
    }

    td {
      width: 100%;
      flex: inherit;
      padding: 0px;
    }

    td:first-child {
      order: -2;
      margin-bottom: config.$space-2x;
    }

    .title-actions-3 {
      width: calc(100% - 3 * config.$icon-size-5x - 2 * config.$space-7x - 8px);
    }
    .title-actions-2 {
      width: calc(100% - 2 * config.$icon-size-5x - 1 * config.$space-7x - 8px);
    }
    .title-actions-1 {
      width: calc(100% - 1 * config.$icon-size-5x - 8px);
    }

    td.actions {
      order: -1;
      flex-grow: 1;
      margin-bottom: config.$space-2x;
      justify-content: flex-end;
      flex-basis: content;
    }

    .badge {
      position: absolute;
      inset: auto config.$space-3x config.$space-3x auto;
    }

    .alignment-right {
      justify-content: flex-start;
    }
  }
}
