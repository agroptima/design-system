@use '../../settings/mixins';
@use '../../settings/color_alias';
@use '../../settings/typography/cards_table' as typography;
@use '../../settings/config';
@use '../../settings/breakpoints';

@mixin generate-title-actions($max-actions: 5) {
  @for $actions from 1 through $max-actions {
    .title-actions-#{$actions} {
      width: calc(
        100% -
          #{$actions} *
          config.$icon-size-5x -
          #{($actions - 1) *
          config.$space-7x} -
          config.$space-3x
      );
    }
  }
}

.cards-table-list {
  border-collapse: separate;
  border-spacing: 0 config.$space-2x;
  width: 100%;

  &.is-sticky {
    .cards-table-header {
      position: sticky;
      top: 7.8%;
    }
  }

  .cards-table-header,
  .cards-table-cell {
    vertical-align: top;
    padding: config.$space-2x config.$space-3x;
  }

  .cards-table-body .cards-table-row {
    box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.25);
    cursor: default;
  }

  .checkbox {
    margin-top: config.$space-1x;
  }

  .cards-table-inner-cell {
    display: flex;
    align-items: flex-start;
    gap: config.$space-2x;
  }

  .actions > .cards-table-inner-cell {
    gap: config.$space-7x;
    justify-content: center;
  }

  .no-wrap {
    white-space: nowrap;
  }

  .alignment-left {
    justify-content: flex-start;
  }

  .alignment-right {
    justify-content: flex-end !important;
  }

  .alignment-center {
    justify-content: center;
  }

  &.primary {
    .cards-table-head > .cards-table-row {
      @include typography.cards-table-list-header;
    }

    .cards-table-header {
      @include mixins.icon-color(color_alias.$neutral-white);
      background: color_alias.$neutral-color-900;
    }

    .cards-table-header:first-child {
      border-radius: config.$corner-radius-xxs 0px 0px config.$corner-radius-xxs;
    }

    .cards-table-header:last-child {
      border-radius: 0px config.$corner-radius-xxs config.$corner-radius-xxs 0px;
    }

    .cards-table-head.cards-table-row {
      border: 1px solid transparent;
      .cards-table-cell {
        @include typography.cards-table-list-text;
      }
    }

    .cards-table-row:not(.disabled):hover {
      background: color_alias.$primary-color-50;
    }

    &.with-title .cards-table-row > .cards-table-cell:first-child {
      @include typography.cards-table-list-highlight-text;
    }

    .cards-table-row.disabled {
      background: color_alias.$neutral-color-50;
      .cards-table-cell {
        @include typography.cards-table-list-disabled-text;
      }
    }

    .cards-table-row > .cards-table-cell {
      border-top: 1px solid transparent;
      border-bottom: 1px solid transparent;
      &:first-child {
        border-left: 1px solid transparent;
      }
      &:last-child {
        border-right: 1px solid transparent;
      }
    }

    .cards-table-row.active {
      box-shadow: none;
      > .cards-table-cell {
        border-color: color_alias.$primary-color-1000;
      }
    }
  }

  @media only screen and (max-width: breakpoints.$large) {
    .cards-table-head {
      display: none;
    }

    .cards-table-row {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      position: relative;
      margin-block: config.$space-3x;
      padding: config.$space-2x config.$space-3x;
      gap: config.$space-1x;
    }

    .cards-table-cell {
      width: 100%;
      flex: inherit;
      padding: 0px;
    }

    .actions {
      width: auto;
      position: absolute;
      inset: config.$space-3x config.$space-3x auto auto;
    }

    .floating-left-mobile {
      width: auto;
      order: 98;
    }

    .floating-right-mobile {
      margin-left: auto;
      width: auto;
      order: 99;
    }

    .cards-table-row.active {
      box-shadow: none;
      border: 1px solid color_alias.$primary-color-1000;
      > .cards-table-cell {
        border-color: transparent !important;
      }
    }

    &.with-title .cards-table-cell:not(.actions):has(.cards-table-cell .badge) {
      margin-top: config.$space-2x;
    }

    @include generate-title-actions(5);
  }
}
