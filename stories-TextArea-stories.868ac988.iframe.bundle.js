"use strict";(self.webpackChunkagroptima_design_system=self.webpackChunkagroptima_design_system||[]).push([[373],{"./src/stories/TextArea.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,WithErrors:()=>WithErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TextArea_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),buildHelpText=(__webpack_require__("./src/atoms/Input.scss"),__webpack_require__("./src/utils/buildHelpText.ts")),classNames=__webpack_require__("./src/utils/classNames.ts");function TextArea({id,label,className,accessibilityLabel,hideLabel=!1,helpText,variant="primary",disabled,name,errors,...props}){const identifier=id||name,helpTexts=(0,buildHelpText.N)(helpText,errors);return(0,jsx_runtime.jsxs)("div",{className:(0,classNames.x)("input-group",variant,className,{invalid:null==errors?void 0:errors.length}),children:[!hideLabel&&(0,jsx_runtime.jsx)("label",{className:"input-label",htmlFor:identifier,children:label}),(0,jsx_runtime.jsx)("div",{className:"input-container",children:(0,jsx_runtime.jsx)("textarea",{id:identifier,disabled,name,"aria-label":accessibilityLabel||label,...props})}),helpTexts.map((helpText=>(0,jsx_runtime.jsx)("span",{className:"input-help-text",children:helpText},`${identifier}-${helpText}`)))]})}try{TextArea.displayName="TextArea",TextArea.__docgenInfo={description:"",displayName:"TextArea",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},accessibilityLabel:{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string"}},hideLabel:{defaultValue:{value:"false"},description:"",name:"hideLabel",required:!1,type:{name:"boolean"}},helpText:{defaultValue:null,description:"",name:"helpText",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"primary"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'}]}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"",name:"errors",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/atoms/TextArea.tsx#TextArea"]={docgenInfo:TextArea.__docgenInfo,name:"TextArea",path:"src/atoms/TextArea.tsx#TextArea"})}catch(__react_docgen_typescript_loader_error){}const figmaPrimaryDesign={design:{type:"figma",url:"https://www.figma.com/file/DN2ova21vWqCRvPspBXgI1/Design-System?type=design&node-id=2371-2157&mode=dev"}},TextArea_stories={title:"Design System/Atoms/Textarea",component:TextArea,tags:["autodocs"],argTypes:{label:{description:"Label for the textarea"},accessibilityLabel:{description:"Describes the textarea purpose. If empty, label content will be used"},placeholder:{description:"Optional textarea placeholder text"},variant:{description:"Textarea variant used"},disabled:{description:"Is the textarea in disabled state?"},helpText:{description:"Optional help text"},name:{description:"Textarea name property"},id:{description:"Value needed for the label relation"},errors:{description:"Optional array of errors. If passed, the errors are listed and invalid style is applied."}}},Primary={args:{label:"Textarea",accessibilityLabel:"Fill the textarea",placeholder:"Write here...",variant:"primary",disabled:!1,helpText:"This text can help you",name:"textarea",id:"textarea"},parameters:figmaPrimaryDesign},WithErrors={args:{label:"Textarea",accessibilityLabel:"Fill the form textarea",placeholder:"Write here...",variant:"primary",disabled:!1,helpText:"This text can help you",name:"textarea",id:"textarea",errors:["Che che che","Another error"]},parameters:figmaPrimaryDesign},__namedExportsOrder=["Primary","WithErrors"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Textarea',\n    accessibilityLabel: 'Fill the textarea',\n    placeholder: 'Write here...',\n    variant: 'primary',\n    disabled: false,\n    helpText: 'This text can help you',\n    name: 'textarea',\n    id: 'textarea'\n  },\n  parameters: figmaPrimaryDesign\n}",...Primary.parameters?.docs?.source}}},WithErrors.parameters={...WithErrors.parameters,docs:{...WithErrors.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Textarea',\n    accessibilityLabel: 'Fill the form textarea',\n    placeholder: 'Write here...',\n    variant: 'primary',\n    disabled: false,\n    helpText: 'This text can help you',\n    name: 'textarea',\n    id: 'textarea',\n    errors: ['Che che che', 'Another error']\n  },\n  parameters: figmaPrimaryDesign\n}",...WithErrors.parameters?.docs?.source}}}},"./src/utils/classNames.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>classNames});const classNames=(...classNames)=>{const resultClasses=[];return classNames.forEach((className=>{if(void 0!==className)return"string"==typeof className?resultClasses.push(className):void Object.keys(className).forEach((key=>{Boolean(className[key])&&resultClasses.push(key)}))})),resultClasses.join(" ")}}}]);